openapi: 3.1.0
info:
  title: Laravel Ecommerce API
  version: 1.0.0
  description: API documentation for the Laravel-based marketplace backend.

paths:

  # ─────────────────────────────────────────────────────────────
  # Users
  # ─────────────────────────────────────────────────────────────
  /api/v1/users:
    get:
      summary: List all users
      tags: [Users]
      responses:
        '200':
          description: List of users.
    post:
      summary: Create a new user
      tags: [Users]
      responses:
        '201':
          description: User created.

  /api/v1/users/{user}:
    parameters:
      - name: user
        in: path
        required: true
        description: "Encrypted user ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: Get user by encrypted ID
      tags: [Users]
      responses:
        '200': { description: User found. }
    put:
      summary: Update user by encrypted ID
      tags: [Users]
      responses:
        '200': { description: User updated. }
    patch:
      summary: Partially update user by encrypted ID
      tags: [Users]
      responses:
        '200': { description: User partially updated. }
    delete:
      summary: Delete user by encrypted ID
      tags: [Users]
      responses:
        '204': { description: User deleted. }

  # ─────────────────────────────────────────────────────────────
  # Buyers
  # ─────────────────────────────────────────────────────────────
  /api/v1/buyers:
    get:
      summary: List all buyers
      tags: [Buyers]
      responses:
        '200': { description: List of buyers. }

  /api/v1/buyers/{buyer}:
    parameters:
      - name: buyer
        in: path
        required: true
        description: "Encrypted buyer ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: Get buyer by encrypted ID
      tags: [Buyers]
      responses:
        '200': { description: Buyer found. }

  /api/v1/buyers/{buyer}/categories:
    parameters:
      - name: buyer
        in: path
        required: true
        description: "Encrypted buyer ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: List categories for buyer by encrypted ID
      tags: [Buyers]
      responses:
        '200': { description: Categories found. }

  /api/v1/buyers/{buyer}/products:
    parameters:
      - name: buyer
        in: path
        required: true
        description: "Encrypted buyer ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: List products for buyer by encrypted ID
      tags: [Buyers]
      responses:
        '200': { description: Products found. }

  /api/v1/buyers/{buyer}/sellers:
    parameters:
      - name: buyer
        in: path
        required: true
        description: "Encrypted buyer ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: List sellers for buyer by encrypted ID
      tags: [Buyers]
      responses:
        '200': { description: Sellers found. }

  /api/v1/buyers/{buyer}/transactions:
    parameters:
      - name: buyer
        in: path
        required: true
        description: "Encrypted buyer ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: List transactions for buyer by encrypted ID
      tags: [Buyers]
      responses:
        '200': { description: Transactions found. }

  # ─────────────────────────────────────────────────────────────
  # Categories
  # ─────────────────────────────────────────────────────────────
  /api/v1/categories:
    get:
      summary: List all categories
      tags: [Categories]
      responses:
        '200': { description: Categories listed. }
    post:
      summary: Create a new category
      tags: [Categories]
      responses:
        '201': { description: Category created. }

  /api/v1/categories/{category}:
    parameters:
      - name: category
        in: path
        required: true
        description: "Encrypted category ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: Get category by encrypted ID
      tags: [Categories]
      responses:
        '200': { description: Category details. }
    put:
      summary: Update category by encrypted ID
      tags: [Categories]
      responses:
        '200': { description: Category updated. }
    patch:
      summary: Partially update category by encrypted ID
      tags: [Categories]
      responses:
        '200': { description: Category partially updated. }
    delete:
      summary: Delete category by encrypted ID
      tags: [Categories]
      responses:
        '204': { description: Category deleted. }

  /api/v1/categories/{category}/buyers:
    parameters:
      - name: category
        in: path
        required: true
        description: "Encrypted category ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: List buyers for category by encrypted ID
      tags: [Categories]
      responses:
        '200': { description: Buyers found. }

  /api/v1/categories/{category}/products:
    parameters:
      - name: category
        in: path
        required: true
        description: "Encrypted category ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: List products for category by encrypted ID
      tags: [Categories]
      responses:
        '200': { description: Products found. }

  /api/v1/categories/{category}/sellers:
    parameters:
      - name: category
        in: path
        required: true
        description: "Encrypted category ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: List sellers for category by encrypted ID
      tags: [Categories]
      responses:
        '200': { description: Sellers found. }

  /api/v1/categories/{category}/transactions:
    parameters:
      - name: category
        in: path
        required: true
        description: "Encrypted category ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: List transactions for category by encrypted ID
      tags: [Categories]
      responses:
        '200': { description: Transactions found. }

  # ─────────────────────────────────────────────────────────────
  # Products
  # ─────────────────────────────────────────────────────────────
  /api/v1/products:
    get:
      summary: List all products
      tags: [Products]
      responses:
        '200': { description: Product list. }

  /api/v1/products/{product}:
    parameters:
      - name: product
        in: path
        required: true
        description: "Encrypted product ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: Get product by encrypted ID
      tags: [Products]
      responses:
        '200': { description: Product found. }

  /api/v1/products/{product}/buyers:
    parameters:
      - name: product
        in: path
        required: true
        description: "Encrypted product ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: List buyers for product by encrypted ID
      tags: [Products]
      responses:
        '200': { description: Buyers found. }

  /api/v1/products/{product}/buyers/{buyer}/transactions:
    parameters:
      - name: product
        in: path
        required: true
        description: "Encrypted product ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
      - name: buyer
        in: path
        required: true
        description: "Encrypted buyer ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    post:
      summary: Create a transaction for product by encrypted buyer ID
      tags: [Transactions]
      responses:
        '201': { description: Transaction created. }

  /api/v1/products/{product}/categories:
    parameters:
      - name: product
        in: path
        required: true
        description: "Encrypted product ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: List categories for product by encrypted ID
      tags: [Products]
      responses:
        '200': { description: Categories listed. }

  /api/v1/products/{product}/categories/{category}:
    parameters:
      - name: product
        in: path
        required: true
        description: "Encrypted product ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
      - name: category
        in: path
        required: true
        description: "Encrypted category ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    put:
      summary: Update product–category link by encrypted IDs
      tags: [Products]
      responses:
        '200': { description: Categories updated. }
    patch:
      summary: Partially update product–category link by encrypted IDs
      tags: [Products]
      responses:
        '200': { description: Categories partially updated. }
    delete:
      summary: Remove product–category link by encrypted IDs
      tags: [Products]
      responses:
        '204': { description: Categories removed. }

  /api/v1/products/{product}/transactions:
    parameters:
      - name: product
        in: path
        required: true
        description: "Encrypted product ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: List transactions for product by encrypted ID
      tags: [Products]
      responses:
        '200': { description: Transactions listed. }

  # ─────────────────────────────────────────────────────────────
  # Sellers
  # ─────────────────────────────────────────────────────────────
  /api/v1/sellers:
    get:
      summary: List all sellers
      tags: [Sellers]
      responses:
        '200': { description: Sellers listed. }

  /api/v1/sellers/{seller}:
    parameters:
      - name: seller
        in: path
        required: true
        description: "Encrypted seller ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: Get seller by encrypted ID
      tags: [Sellers]
      responses:
        '200': { description: Seller found. }

  /api/v1/sellers/{seller}/buyers:
    parameters:
      - name: seller
        in: path
        required: true
        description: "Encrypted seller ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: List buyers for seller by encrypted ID
      tags: [Sellers]
      responses:
        '200': { description: Buyers listed. }

  /api/v1/sellers/{seller}/categories:
    parameters:
      - name: seller
        in: path
        required: true
        description: "Encrypted seller ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: List categories for seller by encrypted ID
      tags: [Sellers]
      responses:
        '200': { description: Categories listed. }

  /api/v1/sellers/{seller}/products:
    parameters:
      - name: seller
        in: path
        required: true
        description: "Encrypted seller ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: List products for seller by encrypted ID
      tags: [Sellers]
      responses:
        '200': { description: Products listed. }
    post:
      summary: Create a product for seller by encrypted ID
      tags: [Sellers]
      responses:
        '201': { description: Product created. }

  /api/v1/sellers/{seller}/products/{product}:
    parameters:
      - name: seller
        in: path
        required: true
        description: "Encrypted seller ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
      - name: product
        in: path
        required: true
        description: "Encrypted product ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: Get seller’s product by encrypted IDs
      tags: [Sellers]
      responses:
        '200': { description: Product found. }
    put:
      summary: Update seller’s product by encrypted IDs
      tags: [Sellers]
      responses:
        '200': { description: Product updated. }
    patch:
      summary: Partially update seller’s product by encrypted IDs
      tags: [Sellers]
      responses:
        '200': { description: Product partially updated. }
    delete:
      summary: Delete seller’s product by encrypted IDs
      tags: [Sellers]
      responses:
        '204': { description: Product deleted. }

  /api/v1/sellers/{seller}/transactions:
    parameters:
      - name: seller
        in: path
        required: true
        description: "Encrypted seller ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: List transactions for seller by encrypted ID
      tags: [Sellers]
      responses:
        '200': { description: Transactions listed. }

  # ─────────────────────────────────────────────────────────────
  # Transactions
  # ─────────────────────────────────────────────────────────────
  /api/v1/transactions:
    get:
      summary: List all transactions
      tags: [Transactions]
      responses:
        '200': { description: Transactions listed. }

  /api/v1/transactions/{transaction}:
    parameters:
      - name: transaction
        in: path
        required: true
        description: "Encrypted transaction ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: Get transaction by encrypted ID
      tags: [Transactions]
      responses:
        '200': { description: Transaction found. }

  /api/v1/transactions/{transaction}/categories:
    parameters:
      - name: transaction
        in: path
        required: true
        description: "Encrypted transaction ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: List categories for transaction by encrypted ID
      tags: [Transactions]
      responses:
        '200': { description: Categories listed. }

  /api/v1/transactions/{transaction}/sellers:
    parameters:
      - name: transaction
        in: path
        required: true
        description: "Encrypted transaction ID"
        schema:
          $ref: '#/components/schemas/encrypted_id'
    get:
      summary: List sellers for transaction by encrypted ID
      tags: [Transactions]
      responses:
        '200': { description: Sellers listed. }

components:
  schemas:
    encrypted_id:
      type: string
      pattern: '^[A-Za-z0-9+/]+=*$'
      description: "Encrypted ID"
